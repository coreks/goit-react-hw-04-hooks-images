{"version":3,"sources":["services/imagesApi.js","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Loader/Loader.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","App.js","index.js"],"names":["getImagesByAxios","axios","create","baseURL","method","params","key","image_type","orientation","per_page","fetchImages","imageName","page","a","hits","data","Searchbar","onSubmit","useState","setImageName","className","e","preventDefault","trim","toast","error","type","placeholder","value","onChange","currentTarget","toLowerCase","autoComplete","autoFocus","ImageGalleryItem","webformatURL","tags","largeImageURL","handleSelectedImage","src","alt","onClick","ImageGallery","map","id","Spinner","color","height","width","timeout","Button","modalRoot","document","querySelector","Modal","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","target","App","setHits","setPage","status","setStatus","selectedImage","setSelectedImage","length","prevState","scrollTo","top","documentElement","scrollHeight","behavior","console","message","getHits","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8989daec.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst getImagesByAxios = axios.create({\n  baseURL: 'https://pixabay.com/api',\n  method: 'GET',\n  params: {\n    key: '22675248-9d53002fe5bb858ba3591edf9',\n    image_type: 'photo',\n    orientation: 'horizontal',\n    per_page: '12',\n  },\n});\n\nexport const fetchImages = async (imageName, page) => {\n  const {\n    data: { hits },\n  } = await getImagesByAxios(`/?q=${imageName}&page=${page}`);\n\n  return hits;\n};\n","import React from 'react';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction Searchbar({ onSubmit }) {\n  const [imageName, setImageName] = useState('');\n\n  const handleNameChange = e => {\n    setImageName(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (imageName.trim() === '') {\n      return toast.error(`Enter the name of the picture!`);\n    }\n\n    onSubmit(imageName);\n    setImageName('');\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form onSubmit={handleSubmit} className=\"SearchForm\">\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          placeholder=\"Search images and photos\"\n          value={imageName}\n          onChange={handleNameChange}\n          autoComplete=\"off\"\n          autoFocus\n        />\n      </form>\n    </header>\n  );\n}\n\nexport default Searchbar;\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({\n  webformatURL,\n  tags,\n  largeImageURL,\n  handleSelectedImage,\n}) => {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={webformatURL}\n        alt={tags}\n        onClick={() => handleSelectedImage(largeImageURL, tags)}\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  );\n};\n\nexport default ImageGalleryItem;\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  handleSelectedImage: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\n\nconst ImageGallery = ({ hits, handleSelectedImage }) => {\n  return (\n    <ul className=\"ImageGallery\">\n      {hits.map(({ id, webformatURL, tags, largeImageURL }) => (\n        <ImageGalleryItem\n          key={id}\n          webformatURL={webformatURL}\n          tags={tags}\n          largeImageURL={largeImageURL}\n          handleSelectedImage={handleSelectedImage}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ImageGallery;\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n    }),\n  ),\n  handleSelectedImage: PropTypes.func,\n};\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst Spinner = () => {\n  return (\n    <div className=\"Loading\">\n      <Loader\n        type=\"Oval\"\n        color=\"#00BFFF\"\n        height={60}\n        width={60}\n        timeout={2500}\n      />\n    </div>\n  );\n};\n\nexport default Spinner;\n","import PropTypes from 'prop-types';\n\nconst Button = ({ onClick }) => {\n  return (\n    <button onClick={onClick} className=\"Button\">\n      Load More\n    </button>\n  );\n};\n\nexport default Button;\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nfunction Modal({ onClose, src, alt }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\n      <div className=\"Modal\">\n        <img src={src} alt={alt} />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nexport default Modal;\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport { fetchImages } from './services/imagesApi';\n\nimport Searchbar from './components/Searchbar/Searchbar.jsx';\nimport ImageGallery from './components/ImageGallery/ImageGallery.jsx';\nimport Spinner from './components/Loader/Loader';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  const [imageName, setImageName] = useState('');\n  const [hits, setHits] = useState([]);\n  const [page, setPage] = useState(1);\n  const [status, setStatus] = useState('idle');\n  const [selectedImage, setSelectedImage] = useState('');\n\n  useEffect(() => {\n    if (!imageName) {\n      return;\n    }\n    async function getHits() {\n      try {\n        setStatus('pending');\n\n        const hits = await fetchImages(imageName, page);\n        setStatus('resolved');\n\n        if (hits.length === 0) {\n          return toast.error(\n            `Picture with the name ${imageName} is not in the catalog`,\n          );\n        }\n\n        setHits(prevState => [...prevState, ...hits]);\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      } catch (error) {\n        setStatus('rejected');\n        console.error(error.message);\n      }\n    }\n    getHits();\n  }, [imageName, page]);\n\n  const handleFormSubmit = imageName => {\n    setImageName(imageName);\n    setHits([]);\n    setPage(1);\n  };\n\n  const pageIncrement = () => {\n    setPage(prevState => prevState + 1);\n  };\n\n  const handleSelectedImage = (src, tags) => {\n    setSelectedImage({ src, tags });\n  };\n\n  const handleCloseModal = () => {\n    setSelectedImage('');\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={handleFormSubmit} />\n\n      {status === 'pending' && <Spinner />}\n\n      {status === 'resolved' && (\n        <ImageGallery hits={hits} handleSelectedImage={handleSelectedImage} />\n      )}\n\n      {hits.length > 0 && <Button onClick={pageIncrement} />}\n\n      {selectedImage && (\n        <Modal\n          onClose={handleCloseModal}\n          src={selectedImage.src}\n          alt={selectedImage.tags}\n        />\n      )}\n\n      <ToastContainer autoClose={2500} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}